<!-- Build Phylonco package -->
<project basedir="." default="build_jar_all" name="BUILD">
    <description>
        Phylonco package.
        JUnit test is available for this build.
        $Id: build_phylonco.xml $
    </description>
    <!-- set global properties for this build-->
    <property name="pkg"  value="phylonco"/>
    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="lib" location="lib" />
    <property name="release_dir" value="release" />
    <property name="dist" location="${build}/dist" />
    <!-- Dependency paths: -->
    <property name="beast2path" location="../beast2" />
    <property name="libBeast2" location="${beast2path}/lib" />
    <property name="srcBeast2" location="${beast2path}/src" />
    <property name="beast2_classpath" location="${beast2path}/build" />
    <property name="beastlabs_classpath" location="../BEASTLabs/build" />
    <property name="add_on_dir" value="${release_dir}/package" />
    <include file="${beast2path}/build.xml" as="beast" />
    <!--
        Include is safer, if include was used instead, non of these weird buld_allBEASTlabs
        would have to be used. All one would need is "beast.build_all" and "beastlabs.build_all"
    -->
    <property name="main_class_BEAST" value="beast.app.BeastMCMC" />
    <property name="report" value="${build}/junitreport"/> <!-- not used? -->
    <path id="classpath">
        <pathelement path="${build}"/>
        <pathelement path="${beast2_classpath}"/>
        <pathelement path="${beastlabs_classpath}"/>
        <fileset dir="${libBeast2}" includes="junit-4.8.2.jar"/>
		<fileset dir="${beast2path}/lib" includes="commons-math3-3.1.1.jar"/>
		<fileset dir="${beast2path}/lib" includes="colt.jar"/>
    </path>



    <!-- start: make a build dir and sent a message-->
    <target name="init">
        <echo message="${ant.project.name}: ${ant.file}" />
    </target>
    <target name="clean">
        <delete dir="${build}" />
    </target>


    <!-- Big buil targets: -->
    <!-- Clean and compile with junit tests -->
    <target name="build_all" depends="clean,compile_all,junit" description="Clean and Build all run-time stuff">
    </target>

    <!-- Clean, compile and build jars with junit tests -->
    <target name="build_jar_all" depends="clean,compile_all,junit,dist_all" description="Clean and Build all run-time stuff">
    </target>

    <!-- Clean compile and build, without junit tests -->
    <target name="build_jar_all_nojunit" depends="clean,compile_all,dist_all" description="Clean and Build all run-time stuff">
    </target>
 

    <!-- Individual build targets: -->
    <!-- compile Java source code -->
    <target name="compile_all" depends="init">
        <!-- Capture the path as a delimited property using the refid attribute -->
        <property name="myclasspath" refid="classpath"/>
        <!-- Emit the property to the ant console -->
        <echo message="Classpath = ${myclasspath}"/>
        <mkdir dir="${build}" />
        <!-- Compile the java code from ${src} into ${build} /bin -->
        <javac srcdir="${src}" destdir="${build}" classpathref="classpath" fork="true" memoryinitialsize="256m" memorymaximumsize="256m" includeantruntime="false">
            <include name="beast/**/**" />
            <!-- compile JUnit test classes -->
            <include name="test/beast/**" />
        </javac>
        <echo message="Successfully compiled." />
    </target>

  <!-- make the ${pkg}.jar -->
    <target name="dist_all" depends="compile_all" description="create ${pkg} jar">
        <!-- Create the distribution directory -->
        <echo message="Building ${pkg}.jar"/>
        <mkdir dir="${dist}" />
        <!-- Put everything in ${build} into the beast.jar file -->
        <jar jarfile="${dist}/${pkg}.jar">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
                <attribute name="Main-Class" value="${main_class_BEAST}" />
            </manifest>
            <fileset dir="${build}">
                <include name="beast/**/*.class" />
            </fileset>
            <fileset dir="${beast2_classpath}">
                <include name="beast/**/*.class" />
                <include name="beast/**/*.properties" />
                <include name="beast/**/*.png" />
                <include name="beagle/**/*.class" />
                <include name="org/**/*.class" />
            </fileset>
        </jar>
        <jar jarfile="${dist}/${pkg}.src.jar">
            <fileset dir="${src}">
                <include name="beast/**/*.java" />
                <include name="beast/**/*.png" />
                <include name="beast/**/*.xsl" />
            </fileset>
        </jar>
        <jar jarfile="${dist}/${pkg}.addon.jar">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
                <fileset dir="${build}">
                <include name="beast/**/*.class" />
                <include name="util/**/*.class" />
                <include name="**/*.properties" />
            </fileset>
        </jar>
    </target>

    <!-- run beast.jar -->
    <target name="run">
        <java jar="${dist}/${pkg}.jar" fork="true" />
    </target>

  <!-- JUnit test -->
    <target name="junit">
        <mkdir dir="${report}" />
        <junit printsummary="yes"> <!--showoutput='yes'-->
            <classpath>
                <path refid="classpath" />
                <path location="${build}" />
            </classpath>
            <formatter type="xml" />
            <batchtest fork="yes" todir="${report}">
                <fileset dir="${src}">
                    <include name="test/**/*Test.java"/>
                </fileset>
                <fileset dir="${srcBeast2}">
                    <include name="test/beast/integration/**/*Test.java"/>
                    <exclude name="test/beast/integration/**/ResumeTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <echo message="JUnit test finished." />
    </target>

    <target name="junitreport">
        <junitreport todir="${report}">
            <fileset dir="${report}" includes="*.xml"/>
            <report format="frames" todir="${report}"/>
        </junitreport>
        <echo message="JUnit test report finished." />
    </target>

    <target name="addon"
        depends="build_jar_all_nojunit"
        description="release BEAST 2 package version of ${pkg}">
        <delete dir="${add_on_dir}" />
        <!-- Create the release directory -->
        <mkdir dir="${add_on_dir}" />
        <mkdir dir="${add_on_dir}/lib" />
        <mkdir dir="${add_on_dir}/templates" />
        <copy todir="${add_on_dir}/lib">
            <fileset dir="${dist}" includes="${pkg}.addon.jar" />
        </copy>
        <copy todir="${add_on_dir}">
            <fileset dir="${dist}" includes="${pkg}.src.jar" />
        </copy>
        <copy todir="${add_on_dir}/templates">
            <fileset file="templates/${pkg}.xml" />
        </copy>
        <jar jarfile="${dist}/${pkg}.addon.zip">
            <fileset dir="${add_on_dir}">
            <include name="**/*" />
            </fileset>
        </jar>
        <echo message="Package version release is finished." />
    </target>

</project>
